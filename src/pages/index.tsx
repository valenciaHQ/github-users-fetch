/** @format */

import Head from "next/head";
import Image from "next/image";
import styles from "@/styles/Home.module.css";
import { useEffect, useState } from "react";
import { User } from "./types";
import Filter from "@/components/Filter/Filter";
import { useSearchParams } from "next/navigation";
import Skeleton from "react-loading-skeleton";
import "react-loading-skeleton/dist/skeleton.css";
import Link from "next/link";

export default function Home() {
  const [users, setUsers] = useState<User[]>([]);
  const [loading, setLoading] = useState(false);
  const params = useSearchParams();

  useEffect(() => {
    const init = async () => {
      setLoading(true);
      let url = "https://api.github.com/users";
      const query = params.get("q");
      if (query) {
        url = `https://api.github.com/search/users?q=${query}`;
      }
      try {
        const response = await fetch(url);
        const data = await response.json();

        //This is to handle the case when the query is present, response model is different
        setUsers(query ? data.items : data);
        setLoading(false);
      } catch (error) {
        console.error("An error occurred", error);
        setLoading(false);
      }
    };
    init();
  }, [params]);

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className={styles.container}>
        <main className={styles.main}>
          <Filter />
          {loading ? (
            <div className={styles.grid}>
              {Array.from({ length: 12 }).map((_, index) => (
                <Skeleton
                  key={index}
                  count={1}
                  height={150}
                  className={styles.skeleton}
                />
              ))}
            </div>
          ) : (
            <div className={styles.grid}>
              {users.map((user) => (
                <div key={user.id} className={styles.card}>
                  <Image
                    src={user.avatar_url}
                    alt={user.login}
                    width={250}
                    height={250}
                    className={styles.avatar}
                  />
                  <div className={styles.cardBody}>
                    <h2>{user.login}</h2>
                    <Link href={`/${user.login}`}>View profile</Link>
                  </div>
                </div>
              ))}
            </div>
          )}
        </main>
        <footer className={styles.footer}>
          <p>
            Made by
            <a href="https://valenciahq.com/" target="_blank" rel="noreferrer">
              ValenciaHQ
            </a>
          </p>
        </footer>
      </div>
    </>
  );
}
